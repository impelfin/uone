## Microsoft store
- Ubuntu 24.04.1 LTS
- Windows Terminal

## windows terminal에서.

wsl --install

Create a default Unix user account: ubuntu
New password: 1234
Retype new password: 1234

$ exit

$ wsl

$ sudo passwd root
[sudo] password for ubuntu: 1234
New password: 1234
Retype new password:1234
passwd: password updated successfully


EC2 -> 인스턴스 생성 -> 
이름 및 태그 : ubuntu
Amazon Machine Image(AMI) : 24.04
새 키 페어 생성 ->
스토리지 구성 30GB ->
인스턴스 시작

54.180.99.246

보안 그룹

3000
3306
27017
8000
8080

----------------------------
## wsl
$ mkdir .ssh
$ cd .ssh

# aws ec2
Host myu
        Hostname 54.180.99.246
        User ubuntu
        IdentityFile ~/.ssh/moon.pem      

$ cp /mnt/c/Users/USER/Desktop/moon/moon.pem .

$ cp -r .ssh ~

$ cp ~/.ssh

$ chmod 600 moon.pem

$ ssh myu

$ sudo passwd root
New password:
Retype new password:
passwd: password updated successfully

$ su -
1234

# vi /etc/ssh/sshd_config
42번 줄 이동 yy p

43 PermitRootLogin yes

# systemctl restart ssh

# exit

$ exit

$ vi ~/.ssh/config

# aws ec2
Host myu
        Hostname 54.180.99.246
        User root
        IdentityFile ~/.ssh/moon.pem

$ ssh ubuntu@myu

$ su -

# vi .ssh/authorized_keys
ssh-rsa 앞부분 삭제

# exit

$ exit

$ ssh myu

# cat > .exrc
set nu ai sm
^d (Ctrl - d)

# cat .exrc

# vi ~/.bashrc

alias c='clear'
alias h='history'
alias df='df -h'
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias ls='ls -aCF --color=auto'
alias ll='ls -alF --color=auto'

export PS1='[\[\e[1;31m\]\u\[\e[m\]@\e[1;32m\]\h\[\e[m\] \[\e[1;36m\]\w\[\e[m\]]\$ '

https://github.com/impelfin -> UNIX
.bashrc
101~110

# source ~/.bashrc

# cp .bashrc /etc/skel/

# cp .exrc /etc/skel/

# su - ubuntu

$ cp /etc/skel/.bashrc .

$ cp /etc/skel/.exrc .

$ source .bashrc

$ exit


# curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash

# source ~/.bashrc

# nvm --version

# nvm ls-remote

# nvm install v22.17.0  

# node -v
v22.17


## /nodejs/hello/app.js
var express = require('express')
var app = express()

app.get('/', function (req, res){
    res.send('Hello NodeJS!!')
})

app.listen(8000, function(){
    console.log('8000 Port : Server Started!!')
})


## aws ec2

# git clone http://github.com/impelfin/uone

# cd /root/uone/nodejs/hello

# npm install express

# npm install -g nodemon

# nodemon app.js
^c

# npm install -g pm2

# pm2 start app.js

# pm2 status


## .gitignore

## nodejs

**/node_modules
**/package-lock.json


# mdir /root/uone/.github/workflows

## nodejs.yaml
name: NodeJS HelloWorld APP
run-name: ${{ github.workflow }}

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.20.0"

      - name: Install Dependencies
        run: |
          cd nodejs/hello 
          npm install 
          npm install pm2 -g

      - name: Run App with PM2
        run: |
          cd nodejs/hello 
          pm2 start app.js --name "hello-app"
          pm2 save

      - name: Stop App with PM2
        run: |
          pm2 list
          pm2 stop "hello-app"
          pm2 delete "hello-app"

      # - name: Keep PM2 Alive
      #   run: |
      #     pm2 list
      #     sleep infinity

# git config --global user.name impelfin

# git config --global user.email impelfin@gmail.com

Github -> Repo -> Settings -> Secrets and Variables -> Actions

HOST : EC2 ip
USERNAME : root
KEY: 본인의 pem 키 복사
PORT : 22

# mkdir deploy

# cd deploy/

# cp -r /root/uone/nodejs/hello/ .

# cd hello/

# pm2 start app.js

---------------------------------------------

## deploy.sh

#!/bin/bash

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
nvm use node

cd /root/uone

git pull;

SRC=/root/uone/nodejs/hello
DEST=$HOME/deploy

rm -rf $DEST
mkdir -p $DEST
cp -r $SRC $DEST

cd $DEST/hello
source ~/.bashrc

npm install

npm install -g pm2

pm2 restart all






